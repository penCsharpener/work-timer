@page "/"
@using WorkTimer.MediatR.Handlers
@using global::MediatR
@inject IMediator Mediator
@inject NavigationManager Navi;
@attribute [Authorize]

<div class="index__dashboard d-flex flex-row gap-8">
  <div class="index__work-hours">
    <MudText Class="mb-2" Typo="Typo.h3">Timer</MudText>

    <EditForm class="d-flex flex-row gap-3" Model="@NewPeriodModel" OnValidSubmit="@HandleValidSubmitAsync">
      <DataAnnotationsValidator />
      <ValidationSummary />
      <MudTextField Label="Comment" @bind-Value="@NewPeriodModel.Comment" />
      <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled">@dayButtonText</MudButton>
      <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Href="/blankWorkday">Add Day</MudButton>
    </EditForm>

    <MudText Typo="Typo.h4" Class="my-4">Most recent work periods</MudText>

    <MudPaper Elevation="4">
      <MudTable @ref="_tableRecent" Items="IndexResponse?.MostRecentWorkPeriods" Dense="true" Striped="true" Hover="true" RowsPerPage="20" Breakpoint="Breakpoint.Xs" LoadingProgressColor="Color.Info">
        <HeaderContent>
          <MudTh>Id</MudTh>
          <MudTh>Start Time</MudTh>
          <MudTh>End Time</MudTh>
          <MudTh>Length</MudTh>
          <MudTh>Comment</MudTh>
          <MudTh>Edit</MudTh>
        </HeaderContent>
        <RowTemplate>
          <MudTd DataLabel="Id">@context.Id</MudTd>
          <MudTd DataLabel="Start Time">@context.StartTime.ToString()</MudTd>
          <MudTd DataLabel="End Time">@context.EndTime.ToString()</MudTd>
          <MudTd DataLabel="Length">@context.GetWorkTime().ToTimeString()</MudTd>
          <MudTd DataLabel="Comment">@context.Comment</MudTd>
          <MudTd DataLabel="Edit">
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Href="@($"workday/{context.WorkDayId}/workperiod/{context.Id}")"></MudIconButton>
          </MudTd>
        </RowTemplate>
      </MudTable>
    </MudPaper>
  </div>
  <div class="index__widgets d-flex flex-column flex-grow-1">
    <div class="index__todos d-flex flex-initial">
      <TodoWidgetComponent></TodoWidgetComponent>
    </div>
    <div class="index__notes">
    </div>
  </div>
</div>



@if (IndexResponse?.WorkDays?.Items.Any() == true)
{
    <MudText Typo="Typo.h4" Class="my-4">Total Overhours</MudText>

    <p class="my-3">@IndexResponse.TotalOverHours.ToTimeString()</p>

  <MudPaper Elevation="4">
    <MudTable @ref="_tableWorkdays" Items="IndexResponse.WorkDays.Items" Dense="true" Striped="true" Hover="true" RowsPerPage="20" Breakpoint="Breakpoint.Xs" LoadingProgressColor="Color.Info">
      <HeaderContent>
        <MudTh>Date</MudTh>
        <MudTh>Time worked</MudTh>
        <MudTh>Overhours</MudTh>
        <MudTh>Action</MudTh>
      </HeaderContent>
      <RowTemplate>
        <MudTd DataLabel="Date">@context.Date.DayOfWeek.ToString(), @context.Date.ToString("dd.MM.yyyy")</MudTd>
        <MudTd DataLabel="Time worked">@context.GetWorkTime().ToTimeString()</MudTd>
        <MudTd DataLabel="Overhours">@context.Overhours.ToTimeString()</MudTd>
        <MudTd DataLabel="Action">
          <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Href="@($"workday/{context.Id}")"></MudIconButton>
        </MudTd>
      </RowTemplate>
       <PagerContent>
        <MudPagination SelectedChanged="PageChanged" Count="@((_tableWorkdays.GetFilteredItemsCount() + _tableWorkdays.RowsPerPage - 1) / _tableWorkdays.RowsPerPage)" Class="pa-4"/>
    </PagerContent>
    </MudTable>
  </MudPaper>
}
else
{
    @CheckForContracts()
}

<div class="my-5">
  <WorkMonthListComponent></WorkMonthListComponent>
</div>


