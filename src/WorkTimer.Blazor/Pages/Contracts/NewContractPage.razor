@page "/contracts/add"
@using global::MediatR
@inject IMediator Mediator
@inject NavigationManager Navi
@attribute [Authorize]

<h3>New Contract</h3>

<EditForm Model="@Model" OnValidSubmit="@HandleValidSubmitAsync">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label for="txtName">Name</label>
        <InputText class="form-control" id="txtName" @bind-Value="@Model.Name"/>
    </div>
    <div class="form-group">
        <label for="txtEmployer">Employer</label>
        <InputText class="form-control" id="txtEmployer" @bind-Value="@Model.Employer"/>
    </div>
    <div class="form-group">
        <label for="numHoursPerWeek">Contracted hours per week</label>
        <InputNumber class="form-control" id="numHoursPerWeek" @bind-Value="@Model.HoursPerWeek"/>
    </div>
    <div class="form-group form-check">
        <InputCheckbox class="form-check-input" id="chkIsCurrent" @bind-Value="@Model.IsCurrent"/>
        <label class="form-check-label" for="chkIsCurrent">Is currently active contract</label>
    </div>

    <button type="submit" class="btn btn-primary">Add Contract</button>
</EditForm>

@code {

    public NewContractRequest Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = new NewContractRequest();
    }

    private async Task HandleValidSubmitAsync()
    {
        var result = await Mediator.Send(Model);
        if (result)
        {
            Navi.NavigateTo("contracts");
        }
        Model = new NewContractRequest();
    }

}
